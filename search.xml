<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux系统升级时不升内核操作</title>
      <link href="/html/1487789122/"/>
      <url>/html/1487789122/</url>
      
        <content type="html"><![CDATA[<blockquote><p>RedHat/CentOS使用 yum update 更新时，默认会升级内核。但有些服务器硬件在升级内核后，新的内核可能会认不出某些硬件，要重新安装驱动，很麻烦。所以在生产环境中不要轻易的升级内核，除非您确定升级内核后不会出现麻烦的问题。</p></blockquote><p>如果使用yum update更新时不升级内核，有两种方法：</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>直接在yum的命令后面加参数，这个命令只生效一次：<br><code>yum update --exclude=kernel*</code></p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>修改yum命令的配置文件，永久生效。<br>这里以 CentOS 6.6 为例来进行说明：</p><p>1、首先检查内核版本以及系统版本。</p><pre><code>[root@localhost ~]# uname -r2.6.32-504.el6.x86_64[root@localhost ~]# cat /etc/issueCentOS release 6.6 (Final)Kernel \r on an \m</code></pre><p>2、将配置文件保存备份。</p><pre><code>[root@localhost ~]# cp /etc/yum.conf /etc/yum.conf.bak</code></pre><p>3、编辑/etc/yum.conf文件。</p><pre><code>[root@localhost ~]# vi /etc/yum.conf</code></pre><p><img src="/html/1487789122/1591686764931.png" alt="NAME"></p><p>4、在[main]的后面加入如下内容：</p><pre><code>exclude=kernel*</code></pre><p><img src="/html/1487789122/82240e8137a6e61ec8279de60f5e6553_7fa8282ad93047a-1.png" alt="NAME"></p><p>5、按下Esc，输入下面命令进行保存：wq。</p><p>6、使用 yum update更新。</p><pre><code>[root@localhost yum.repos.d]# yum update</code></pre><p>7、等到<code>yum update</code>更新完成之后重启电脑，再来检查内核版本。</p><pre><code>[root@localhost ~]# uname -r2.6.32-504.el6.x86_64[root@localhost ~]# cat /etc/issueCentOS release 6.8 (Final)Kernel \r on an \m</code></pre><p><img src="/html/1487789122/b497bebf8544aa78b323a7c91d231147_7fa8282ad93047a.png" alt="NAME"></p><p>可以看到<code>yum update</code>后系统版本升级了，内核版本没有升级。如果同时要禁止升级系统，则在其 <code>[main]</code> 部分末尾增加 <code>“exclude=kernel centos-release”</code>。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo杂记</title>
      <link href="/html/3351943245/"/>
      <url>/html/3351943245/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo杂记"><a href="#Hexo杂记" class="headerlink" title="Hexo杂记"></a>Hexo杂记</h2><p>hexo d后 <code>ERROR Deployer not found: git</code></p><p><code>$ hexo d</code><br><code>ERROR Deployer not found: git</code></p><p><code>npm install --save hexo-deployer-git</code></p><p>如果想要在Hexo放图片可以安装 hexo-asset-image插件：</p><p>在_config.yml文件中设置 post_asset_folder: true</p><p>$npm install <a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">https://github.com/CodeFalling/hexo-asset-image</a> – save</p><p>当用户创建文章的时候，同时在post会创建一个一样的文件夹，在图片中放入这个文件</p><p><code>![NAME](文章名字/图片.jpg)</code></p><h5 id="新建文章可用Hexo命令创建："><a href="#新建文章可用Hexo命令创建：" class="headerlink" title="新建文章可用Hexo命令创建："></a>新建文章可用Hexo命令创建：</h5><p>hexo new <title></title></p><p>生成（文章）时默认生成categories配置项<br>categories有点类似tags，写在文章属性之中，所以需要在文章生成时添加categories属性。<br>编辑/scaffolds/post.md，在最下面添加一行categories</p><p><code>title: hexo杂记</code><br><code>date: 1591685901000</code><br><code>tags:</code><br><code>categories:</code></p><h5 id="生成分类、归档、标签"><a href="#生成分类、归档、标签" class="headerlink" title="生成分类、归档、标签"></a>生成分类、归档、标签</h5><p>hexo new page “categories”</p><h5 id="修改文章永久链接为随机编号"><a href="#修改文章永久链接为随机编号" class="headerlink" title="修改文章永久链接为随机编号"></a>修改文章永久链接为随机编号</h5><ul><li><p>安装abbrlink插件<br>npm install hexo-abbrlink –save</p></li><li><p>编辑站点配置文件<br>打开博客根目录下的站点配置文件_config.yml，修改如下配置：</p><pre><code>#permalink: :year/:month/:day/:title/#permalink_defaults:permalink: posts/:abbrlink/abbrlink:alg: crc32 #support crc16(default) and crc32rep: dec   #support dec(default) and hex</code></pre></li><li><p>下面解释说明一下：</p></li></ul><p>首先指定Hexo文章永久链接的格式，接下来两个是abbrlink插件的设置：</p><pre><code>alg -- Algorithm (currently support crc16 and crc32, which crc16 is default)rep -- Represent (the generated link could be presented in hex or dec value)</code></pre><p>这两个设置的示例如下：</p><pre><code>crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>使用hexo clean &amp;&amp; hexo g重新生成博客，在博客源文件可以看到自动生成的abbrlink编号：</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomcat</title>
      <link href="/html/2453715852/"/>
      <url>/html/2453715852/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
